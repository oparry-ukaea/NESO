<?xml version="1.0" encoding="utf-8" ?>
<NEKTAR>
    <COLLECTIONS DEFAULT="MatrixFree" />
    <!--
        The composite index for the domain is expected to be 0 if the mesh was generated from either of the .geo files
     -->
    <EXPANSIONS>
       <E COMPOSITE="C[0]" NUMMODES="4" TYPE="MODIFIED" FIELDS="ne,Ge" />
    </EXPANSIONS>

    <CONDITIONS>
        <SOLVERINFO>
            <I PROPERTY="EQTYPE"                   VALUE="Outflow1D"                 />
            <I PROPERTY="AdvectionType"            VALUE="WeakDG"               />
            <I PROPERTY="Projection"               VALUE="DisContinuous"        />
            <I PROPERTY="TimeIntegrationMethod"    VALUE="ClassicalRungeKutta4" />
            <I PROPERTY="UpwindType"               VALUE="Upwind"               />
        </SOLVERINFO>

        <GLOBALSYSSOLNINFO>
            <V VAR="ne,Ge">
                <I PROPERTY="GlobalSysSoln" VALUE="IterativeStaticCond" />
                <I PROPERTY="IterativeSolverTolerance" VALUE="1e-6"/>
            </V>
        </GLOBALSYSSOLNINFO>

        <PARAMETERS>
            <P> TimeStep      = 3e-3              </P>
            <P> NumSteps      = 2000              </P>
            <P> TFinal        = NumSteps*TimeStep </P>
            <P> IO_InfoSteps  = NumSteps+1        </P>
            <P> IO_CheckSteps = 100               </P>
            <!-- Physical params in user-facing units -->
            <P> Te_eV = 1.0 </P> <!-- Electron temperature in eV-->
            <P> Td_eV = 1.0 </P> <!-- Ion temperature in eV -->
            <P> B_T   = 1.0 </P> <!-- Magnetic field strength in T -->
            <!--User-defined scaling factors -->
            <P> B0   = 1.0  </P> <!-- Magnetic field scaling in T -->
            <P> Ls   = 1.0  </P> <!-- Length factor (=1 if mesh in m) -->
            <P> Nref = 1.0  </P> <!-- Dimensionless reference number density -->
            <!-- Physical constants -->
            <P> kJ      = 1.0 </P> <!-- Boltzmann constant in J/K -->
            <P> keV     = 1.0  </P> <!-- Boltzmann constant in eV/K -->
            <P> m_u     = 1.0 </P> <!-- Atomic mass unit in kg -->
            <P> q_e     = 1.0 </P> <!-- Fundamental unit of charge in C -->
            <P> eps0_SI = 1.0 </P> <!-- Permittivity of free space in m^-3 kg^-1 s^4 A^2 -->
            <!-- Derived non-dimensionalisation factors -->
            <P> ts   = m_u/B0/q_e        </P> <!-- s -->
            <P> ns   = Nref/Ls/Ls/Ls     </P> <!-- m^-3 -->
            <P> ps   = Nref*m_u/Ls/ts/ts </P> <!-- Pascal, or kg/m/s^2 -->
            <P> Us   = Ls/ts             </P> <!-- m/s -->
            <P> Tmps = m_u*Us*Us/kJ      </P> <!-- K -->
            <P> phis = m_u*Us*Us/q_e     </P> <!-- kg*m^2/C/s^2 -->
            <P> wci  = 1./ts             </P> <!-- Ion cyclotron frequency in s^-1 -->
            <!-- Dimensionless quantities -->
            <P> Bxy   = 0.0                   </P> <!-- Magnetic field strength -->
            <P> e     = 1.0                     </P> <!-- Charge unit -->
            <P> eps0  = eps0_SI*phis*Ls/q_e     </P> <!-- Permittivity of free space -->
            <P> md    = 1.0                     </P> <!-- Ion mass -->
            <P> me    = 1.0                </P> <!-- Electron mass (multiplied by 60 to improve convergence) -->
            <P> nRef  = 1.0/ns                 </P> <!-- Reference density (1e18/m^3) converted to dimensionless units -->
            <P> qd    = e                       </P> <!-- Charge on a Deuterium ion -->
            <P> qelec = -e                      </P> <!-- Charge on an electron. Longer name to avoid confusion with q_e. -->
            <P> Rmax  = 1/Ls                  </P> <!-- Radius of cylindrical domain; used in ICs; must match mesh -->
            <P> Te    = Te_eV/keV/Tmps          </P> <!-- Electron temperature -->
            <P> Td    = Td_eV/keV/Tmps          </P> <!-- Ion temperature -->
            <P> cs    = sqrt(e*(Td+Te)/(md+me)) </P> <!-- Sound speed = sqrt(P_tot/rho_tot)-->
            <!-- Constant factors used in computing the Coulomb logarithms and collision frequencies
                 nu_ei         = nu_ei_const * ne * logLambda(ne)
                 logLambda(ne) = logLambda_const - 0.5*ln(ne)
            -->
            <P> sumvsq          = 2*(Te/me+Td/md)                                        </P> <!-- Intermediate term to make nu_ei_const expression (slightly) clearer -->
            <!-- <P> nu_ei_const     = qelec^2*qd^2*(1+me/md)/(3*(PI*sumvsq)^1.5*eps0^2*me^2) </P>  -->
            <!-- Set nu_ei_const=0 to ignore collision terms -->
            <P> nu_ei_const     = 0.0 </P> <!-- See eqn. 133 in equations doc (v1.30)-->
            <P> logLambda_const = 30-log(qd/e)+1.5*log(Te_eV)                            </P> <!-- See line 2 of eqn. 134 in equations doc (v1.30) -->
            <P> n_floor_fac = 1e-5</P>
            <!-- Params for 1D problem -->
            <P> n_star = 3 </P>
            <P> T      = 2 </P>
            <P> c      = 2*n_star*sqrt(T) </P>

            <!-- Params for w ICs -->
            <P> xsize  = 1.0 </P>
            <P> ysize  = 1.0 </P>
            <P> zsize  = 2.0 </P>
            <P> xc     = 0.0 </P>
            <P> yc     = 0.0 </P>
            <P> zc     = 0.0 </P>

            <!-- Uncomment these to disable terms -->
            <P>disable_collisions         = 1 </P>
            <!-- <P>disable_elec_advection     = 1 </P> -->
            <P>disable_EPar               = 1 </P>
            <P>disable_gradP              = 1 </P>
            <P>disable_ion_advection      = 1 </P>
            <P>disable_polarisation_drift = 1 </P>
            <P>disable_vort_advection     = 1 </P>
        </PARAMETERS>

        <VARIABLES>
            <V ID="0"> ne  </V>
            <V ID="1"> Ge  </V>
        </VARIABLES>

        <BOUNDARYREGIONS>
            <B ID="0"> C[1] </B> <!-- Low-x end -->
            <B ID="1"> C[2] </B> <!-- High-x end -->
            <B ID="2"> C[3] </B> <!-- Low-y end -->
            <B ID="3"> C[4] </B> <!-- High-y end -->
            <B ID="4"> C[5] </B> <!-- Low-z end -->
            <B ID="5"> C[6] </B> <!-- High-z end -->
        </BOUNDARYREGIONS>

        <BOUNDARYCONDITIONS>
             <!-- x -->
            <REGION REF="0">
                <P VAR="ne"  VALUE="[1]" />
                <P VAR="Ge"  VALUE="[1]" />
            </REGION>
            <REGION REF="1">
                <P VAR="ne"  VALUE="[0]" />
                <P VAR="Ge"  VALUE="[0]" />
            </REGION>

            <!-- y -->
	        <REGION REF="2">
                <P VAR="ne"  VALUE="[3]" />
                <P VAR="Ge"  VALUE="[3]" />
            </REGION>
            <REGION REF="3">
                <P VAR="ne"  VALUE="[2]" />
                <P VAR="Ge"  VALUE="[2]" />
            </REGION>

            <!-- z -->
            <REGION REF="4">
                <D VAR="ne"  VALUE="n_star/sqrt(T)" />
                <D VAR="Ge"  VALUE="-n_star" />
            </REGION>
            <REGION REF="5">
                <D VAR="ne"  VALUE="n_star/sqrt(T)" />
                <D VAR="Ge"  VALUE="2*n_star" />
            </REGION>
        </BOUNDARYCONDITIONS>
        <FUNCTION NAME="InitialConditions">
            <E VAR="ne"  DOMAIN="0" VALUE="n_star/sqrt(T)" />
            <E VAR="Ge"  DOMAIN="0" VALUE="z" />
        </FUNCTION>
        <FUNCTION NAME="dens_src">
            <E VAR="ne" VALUE="n_star"/>
        </FUNCTION>
        <FUNCTION NAME = "ExactSolution">
            <E VAR="ne" VALUE="(c+sqrt(c*c-4*T*n_star*n_star*z*z))/2/T" />
            <E VAR="Ge" VALUE="(c-sqrt(c*c-4*T*n_star*n_star*z*z))/2/n_star/z" />
        </FUNCTION>
    </CONDITIONS>
</NEKTAR>
